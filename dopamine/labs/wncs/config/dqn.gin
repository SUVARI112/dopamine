# Hyperparameters follow the classic Nature DQN, but we modify as necessary to
# match those used in Rainbow (Hessel et al., 2018), to ensure apples-to-apples
# comparison.

Environment.include_zeros = True
Environment.cost_type = "log_cost" 
Environment.algorithm="dqn"

JaxDQNAgent.gamma = 0.950
JaxDQNAgent.update_horizon = 1
JaxDQNAgent.min_replay_history = 4_000  # agent steps
JaxDQNAgent.update_period = 1
JaxDQNAgent.target_update_period = 1  # agent steps
JaxDQNAgent.epsilon_train = 0.01
JaxDQNAgent.epsilon_eval = 0.001
JaxDQNAgent.epsilon_decay_period = 50_000  # agent steps
# Note: We are using the Adam optimizer by default for JaxDQN, which differs
#       from the original NatureDQN and the dopamine TensorFlow version. In
#       the experiments we have ran, we have found that using Adam yields
#       improved training performance.
JaxDQNAgent.optimizer = 'adam'
create_optimizer.learning_rate = 6.25e-5
create_optimizer.eps = 1.5e-4


create_runner.schedule = 'continuous_train'
create_agent.agent_name = 'jax_dqn'
create_agent.debug_mode = True
Runner.num_iterations = 4
Runner.training_steps = 250_000  # agent steps
Runner.evaluation_steps = 500  # agent steps
Runner.max_steps_per_episode = 500  # agent steps
Runner.clip_rewards=False

ReplayBuffer.max_capacity = 250_000
ReplayBuffer.batch_size = 32
